CREATE TABLE USERS
(
	ID           	INTEGER AUTO_INCREMENT,
	FIRSTNAME		VARCHAR2(50),
	LASTNAME		VARCHAR2(50),
	EMAIL			VARCHAR2(50) NOT NULL,
	PASSWORD		VARCHAR2(32000) NOT NULL,
	IS_APPROVED		TINYINT(1) NOT NULL,
	POINTS			INTEGER NOT NULL,
	GROUP_NUMBER    INTEGER,
	IS_ARCHIVED		TINYINT(1) DEFAULT 0 NOT NULL,
	PRIMARY KEY (ID),
);

CREATE TABLE RESERVATIONS
(
	ID            	INTEGER AUTO_INCREMENT,
	DATE_FROM		DATE NOT NULL,
	DATE_TO			DATE NOT NULL,
	USER_ID			INTEGER NOT NULL,
	SUMMERHOUSE_ID	INTEGER NOT NULL,
	IS_APPROVED		TINYINT(1) NOT NULL,
	IS_ARCHIVED		TINYINT(1) DEFAULT 0 NOT NULL,
	PRIMARY KEY (ID),
	FOREIGN KEY (USER_ID) REFERENCES USERS (ID),
	FOREIGN KEY (SUMMERHOUSE_ID) REFERENCES SUMMERHOUSES (ID)
);

CREATE TABLE SUMMERHOUSES
(
	ID              INTEGER AUTO_INCREMENT,
	TITLE			VARCHAR2(500),
	ADDRESS			VARCHAR2(500),
	PRICE			INTEGER,
	DESCRIPTION		VARCHAR2(2000),
	CAPACITY		INTEGER,
	DATE_FROM		DATE NOT NULL,
	DATE_TO			DATE NOT NULL,
	IS_ARCHIVED		TINYINT(1) DEFAULT 0 NOT NULL,
	PRIMARY KEY (ID),
);

CREATE TABLE SUMMERHOUSE_SERVICES
(	
	
	SERVICE_ID	INTEGER NOT NULL,
	SUMMERHOUSE_ID	INTEGER NOT NULL,
	PRIMARY KEY(SERVICE_ID,SUMMERHOUSE_ID),
	FOREIGN KEY (SERVICE_ID) REFERENCES SERVICES (ID),
	FOREIGN KEY (SUMMERHOUSE_ID) REFERENCES SUMMERHOUSES (ID)
);

CREATE TABLE SERVICES
(
	ID              INTEGER AUTO_INCREMENT,
	TITLE			VARCHAR2(500),
	PRICE			INTEGER,
	DESCRIPTION		VARCHAR2(2000),
	IS_ARCHIVED		TINYINT(1) DEFAULT 0 NOT NULL,
	PRIMARY KEY (ID),
	FOREIGN KEY (knygeles_ID) REFERENCES StudijuKnygele (studento_ID)
);




